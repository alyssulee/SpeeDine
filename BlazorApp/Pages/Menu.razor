@page "/menu"
@inject MenuRepository MenuRepository 
@inject Microsoft.AspNetCore.Components.NavigationManager navigationManager

@*Categories*@
<div class='category-bar'>
    <button class='left-arrow'> &lsaquo;</button>
    <div class='scroll-categories'>
        <div class='categories'>
            @foreach(var category in categories)
            {
                <input type="radio" id="@category" name="categories" value="@category" 
                    style="display: none;" checked="@(selectedCategory == category)" 
                    @onchange="@(() => { selectedCategory = category; FilterMenu();})">
                <label class='category' for="@category">@category</label><br>
            }
        </div>
    </div>
    <button class='right-arrow'>&rsaquo;</button>
</div>

<div class='menu'>
    <h1>Menu</h1>

    @*Menu List*@
    <ul>
        @foreach(var menuItem in displayMenuList)
        {
            <li class='menu-item'>
                <div class='menu-item-container'>
                    <img src=@menuItem.ImgLink>
                    <div style='padding: 0.5rem; flex-grow: 1;'>
                         <div class='row'>
                            <p style="font-weight:bold; margin-right:auto">@menuItem.Name</p>
                            <p style="margin-left:auto">$@menuItem.Price</p>
                        </div>
                        <div class='row'>
                            <p>@menuItem.Description</p>
                        </div>
                    </div>
                </div>
            </li>
        }
    </ul>
</div>

@code 
{
    List<MenuCategory> categories = Enum.GetValues(typeof(MenuCategory)).Cast<MenuCategory>().ToList();
    MenuRepository menuRepo = new MenuRepository();

    //Attributes
    MenuCategory selectedCategory;
    List<MenuItem> displayMenuList = new List<MenuItem>();

    protected override void OnInitialized()
    {
        selectedCategory = MenuCategory.Popular;
        FilterMenu();
        base.OnInitialized();
    }

    private void FilterMenu()
    {
        displayMenuList = menuRepo.GetMenuByCategory(selectedCategory);
    }

    private void OpenFoodDetailsPage()
    {
        
    }

}